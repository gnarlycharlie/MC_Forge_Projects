package com.uson.RTWA;

import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.Item.ToolMaterial;
import net.minecraft.item.ItemStack;
import net.minecraft.item.ItemSword;
import net.minecraftforge.common.util.EnumHelper;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;

@Mod(modid="RTWA", name="Refined Tools, Weapons and Armor", version="1.7.10")

public class RTWA_core {

	@Instance(value="RTWA")
	public static RTWA_core instance;
	
	@SidedProxy(clientSide="com.uson.RTWA.client.ClientProxy", serverSide="com.uson.RTWA.CommonProxy")
	public static CommonProxy proxy;
	
	public static ToolMaterial CARBONTOOL=EnumHelper.addToolMaterial("carbon", 1, 250, 4.0F, 1, 10);
	
	public static Item carbonChunk=new Item().setCreativeTab(CreativeTabs.tabMaterials).setUnlocalizedName("carbonChunk").setTextureName("RTWA:carbonChunk");
	public static Item carbonRefined=new Item().setCreativeTab(CreativeTabs.tabMaterials).setUnlocalizedName("carbonRefined").setTextureName("RTWA:carbonRefined");
	public static Item carbonSword=new ItemSword(CARBONTOOL).setUnlocalizedName("carbonSword").setTextureName("rtwa:carbonSword");
	
	@EventHandler
	public void preInit(FMLPreInitializationEvent event){
		
		GameRegistry.addRecipe(new ItemStack(carbonChunk, 1), new Object[]{"cc ", "cc ", "   ", 'c', Items.coal});
		GameRegistry.addRecipe(new ItemStack(carbonChunk, 1), new Object[]{" cc", " cc", "   ", 'c', Items.coal});
		GameRegistry.addRecipe(new ItemStack(carbonChunk, 1), new Object[]{"   ", "cc ", "cc ", 'c', Items.coal});
		GameRegistry.addRecipe(new ItemStack(carbonChunk, 1), new Object[]{"   ", " cc", " cc", 'c', Items.coal});
		
	}
	@EventHandler
	public void init(FMLInitializationEvent event){
		
	}
	@EventHandler
	public void postInit(FMLPostInitializationEvent event){
		
	}
}
